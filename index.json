[{"content":"0x00 Before Start Recently, I just gave my iPhone 4S away. This phone runs smoothly with jailbreak iOS 6.1.3. It was siting in my nostalgia box for years and has never been my daily driver.\nBack in time, I was a big fun of Motorola Milestone/Droid series and my main phone was the last of these QWERTY phones, Photon Q (XT897). Its keyboard was fantastic and CyanogenMod 11 (Android 4.4 KitKat) with XPosed framework was perfect in both productivity and aesthetics.\nMy final QWERTY phone is Nokia N900 since Motorola no longer making them. This is a phone from 2009 but I bought it after my Photon Q was broken. It was cheap compare to Neo900 and runs Maemo 5 or other open-source systems such as Firefox Mobile, Ubuntu and Kali Linux. Speaking of Neo900, it makes me remember the X62, a ThinkPad Mod.\nI don\u0026rsquo;t like to mod hardware just to keep up with the software, I\u0026rsquo;d prefer the opposite.\nI really like the idea from cheapskatesguide and lowtechmagazine that could save people from the pitfalls of consumerism. Moreover, to me it\u0026rsquo;s not about saving money on technology nor adapting certain lifestyles. This is a manifestation of ideology, the way of pursuing freedom.\n0x01 Maemo 5 Factory Reset This step is optional but I\u0026rsquo;d prefer to have a clean, latest base system to start with.\nThe official guide is very well written but those download links are already down.\nI found maemo flasher 3.5 from github with additional useful information and firmware files, also its archive.\nWith the flasher tool and two .bin files, I can follow this guide to perform the reset/upgrade.\nflasher-3.5 -F RX-51_2009SE_10.2010.19-1_PR_COMBINED_MR0_ARM.bin -f flasher-3.5 -F RX-51_2009SE_10.2010.13-2.VANILLA_PR_EMMC_MR0_ARM.bin -f -R 0x02 Flashing postmarketOS  I used the SD card method and downloaded the image file from official site.\nAfter checksum, I need to use lsblk to find and edit the dd  target /dev/sdx.\nsha512sum 20221005-1522-postmarketOS-edge-i3wm-0.3-nokia-n900.img.xz xzcat 20221005-1522-postmarketOS-edge-i3wm-0.3-nokia-n900.img.xz | sudo dd of=/dev/sdx status=progress bs=1M While flashing the SD card, I can prepare the root access on Maemo by Open App manager - Update - Download - System - Sudser , this needs Wi-Fi connection.\nEither Sudser or rootsh would work, and they need \u0026ldquo;Extras repository\u0026rdquo; to download. Which should be already included with the latest firmware RX-51_2009SE_10.2010.xx.\nIn case of adding Extras manually, Open App manager - Click title bar drop-down menu - Application catalogues - New and input these then Update:\nCatalogue name: Extras Web address: http://repository.maemo.org/extras/ Distribution: fremantle Components: free non-free 0x03 Boot into U-Boot Now, power off, put the SD card with fresh postmarketOS into the phone and turn back on Maemo, Open X terminal and execute:\nsudo apt-get install u-boot-flasher If Sudser was installed properly, sudo command should go through without password prompt.\nAfter installation of u-boot, configure the entry menu by sudo vi /etc/bootmenu.d/10-pmos.item\nITEM_NAME=\u0026#34;postmarketOS\u0026#34; ITEM_SCRIPT=\u0026#34;boot.scr\u0026#34; ITEM_DEVICE=\u0026#34;${EXT_CARD}p1\u0026#34; ITEM_FSTYPE=\u0026#34;ext2\u0026#34; Create link\nsudo ln -s /etc/bootmenu.d/10-pmos.item /etc/default/bootmenu.item Update changes\nu-boot-update-bootmenu Finally, reboot the phone into the U-boot bootloader menu and boot postmarketOS.\n0x04 Usage of postmarketOS Like the official wiki, there are other articles about N900 with pmOS but solely focuses on installation rather than post-installation. People on YouTube either frustrated by stucking at the i3wm wallpaper or showing off their magical techniques. I like freedom and openess, not gatekeeping. This is the motivation behind this post.\nThe blue arrow key in combination with the Volume Up/Down to switch to a different virtual terminal. Combine with Enter key is Tab, with Backspace key is Escape, these would come handy with command-line.\nHere are some basic techniques of i3wm from the official wiki page. It\u0026rsquo;s more efficient than common desktop environments on such a constrained device.\ndefault mode shift + space: switch to \u0026#34;command mode\u0026#34; command mode t: open terminal k: kill current program w: workspace mode r: restart i3wm (use after modifying the config) q: go back to \u0026#34;default mode\u0026#34; workspace mode a/s/d/f/g: switch to workspace 1/2/3/4/5 q: go back to \u0026#34;command mode\u0026#34; Default Login, which can be used for local virtual terminal / text console or remote SSH.\nusername: user password: 147147 First thing to do is to say good-bye to the wallpaper by opening a terminal:\nshift + space type t then Enter\nFor security and convenience, change the default password\nsudo passwd user Connect to Wi-Fi, run nmtui then select \u0026ldquo;Activate a connection\u0026rdquo;\nsudo nmtui Set up date and time\nsudo date -s \u0026#34;2022-10-xx xx:xx:xx\u0026#34; sudo hwclock -w Start SSH daemon\nsudo service sshd start From now on, it\u0026rsquo;s easier to continue with SSH on a relative larger computer\nssh 192.168.x.xxx -l user #this command runs from a remote computer, not on the phone #check ip from the top right of status bar or ifconfig While checking the update, I got BAD Signature errors\nsudo apk update Fixing it by sudo vi /etc/apk/repositories, change content as below:\nhttps://mirror.postmarketos.org/postmarketos/master/ https://dl-cdn.alpinelinux.org/alpine/latest-stable/main/ https://dl-cdn.alpinelinux.org/alpine/latest-stable/community/ 0x05 Post-installation Softwares Web browser is considered essential in my use case. There are many options and a out-dated test review video as a reference. I did my own test anyway, that netsurf is the fastest one for simple web pages and midori is the only working one for \u0026ldquo;modern\u0026rdquo;(heavy) web pages.\nThere are also text-based browsers like vimb, w3m and lynx. No need to be limited by the application list on pmOS wiki, Arch Linux wiki is always my best friend.\nsudo apk add xxx flatpak repo provides many up-to-date applications although I didn\u0026rsquo;t find a need for that.\nsudo apk add flatpak flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo There are other tools that are useful to me, such as a GUI-based file manager, text editor and process manager. I don\u0026rsquo;t depend on CLI tools with a device that has screen.\nsudo apk add nemo gedit htop To run the installed tools, simply enter its package name e.g. gedit in the terminal of the phone.\npostmarketos-tweaks seems useful but in fact it\u0026rsquo;s not for N900. Run it withpmos-tweaks instead of its full name.\nSometimes I get connection aborted/ IO error when using sudo apk add, So I have to retry multiple times. Using sudo apk fetch instead may work better, or troubleshooting the network.\nIt maybe interesting to try install xfce4 on N900 but I feel good with i3wm for now.\nAfter installing everything, clean up the cache either by\nsudo apk -v cache clean or\nsudo rm -rf /var/cache/apk/* Then check the storage usage\ndf -h I\u0026rsquo;m using a good old humble 4GB Toshiba Class-4. It works reliably with adequate speed for N900.\nBy far, the post-installation is complete, less than 2GB of my SD card was used. Everything looks good and it\u0026rsquo;s ready to work whenever I need it.\nquitesimple even has more toys like puting LUKS encryption onto N900.\nFor me, this phone will not be a tiny server nor an open-source media player, although it can be. As I said at the beginning, it is not about making use of the phone nor my skills, not even for the love of Linux.\n","permalink":"https://techshinobi.org/posts/pmos/","summary":"0x00 Before Start Recently, I just gave my iPhone 4S away. This phone runs smoothly with jailbreak iOS 6.1.3. It was siting in my nostalgia box for years and has never been my daily driver.\nBack in time, I was a big fun of Motorola Milestone/Droid series and my main phone was the last of these QWERTY phones, Photon Q (XT897). Its keyboard was fantastic and CyanogenMod 11 (Android 4.4 KitKat) with XPosed framework was perfect in both productivity and aesthetics.","title":"Nokia N900, postmarketOS and Ideology"},{"content":"Kali Linux \u0026amp; FreshTomato Parrot OS was on my old ThinkPad for many years. I recently upgraded it and had some issue with my multi-bootloader. Although it\u0026rsquo;s not Parrot OS\u0026rsquo;s fault, I switched to Kali Linux as a workaround.\nI\u0026rsquo;ve been using this pentesting system since early BackTrack era but never felt it ought to be installed on a hard drive.\nThe graphic installer is much simpler than Parrot OS that may not be an issue for most people. My complain is just because my multi-boot hard drive has a very complex partition structure where an advanced installer is needed.\nThe driver support of Kali Linux is also inferior to Parrot OS. I have to prepare or install the wlan driver manually although it\u0026rsquo;s a common problem with Broadcom chips.\nUnfortunately, This auto installing script did not work and sudo apt-get install firmware-b43-installer worked partially.\nThe wlan adapter wouldn\u0026rsquo;t connect to a router with 802.11 N only mode. It only connects with Auto or B/G mixed mode. This is acceptable since I just need to tweak settings in the router system freshtomato. Basic - Network - Wireless eth - Wireless Network Mode - Auto In this case I don\u0026rsquo;t care much about network performance.\nAnonsurf To be honest, I only use this system occasionally. So as long as it\u0026rsquo;s not rolling release, I\u0026rsquo;m OK with it.\nIt\u0026rsquo;s glad to have those pre-installed VPN clients but I still miss Anonsurf from Parrot OS. VPN provides good security against MITM attacks but in case of privacy and tracking, VPNs can\u0026rsquo;t compete with TOR at all. When needed, it\u0026rsquo;s better to have both VPN and TOR at the same time to maximize security and privacy.\nIn my case, I just need TOR running system-wide (a.k.a. Torification) like Whonix or Tails. The built-in Anonsurf is the main reason I had been using Parrot OS. Thanks to Und3rf10w maintaining kali-anonsurf so I can still have Anonsurf around even without Parrot OS.\nInstallation is easy by following this guide but it\u0026rsquo;s not as handy as in Parrot OS where I can run anonsurf with one-click.\nSo I made a simple script for that reason.\nFirst, create anonsurf.sh by nano or text editor with contents below:\n#!/bin/sh sudo anonsurf start sudo anonsurf myip sudo anonsurf status Save it and chmod +x anonsurf.sh in case of permission issue.\nThen, create a shortcut on taskbar:\nPanel - Add New Items - Launcher - Properties - Add a new empty item\nName: anonsurf Command: /path/to/anonsurf.sh Icon: network-disconnect check Run in terminal Done. Now by clicking the shortcut, it will start anonsurf and show connection info within terminal. Close the window and run it again will change to another node automatically.\nIt\u0026rsquo;s good to set the script auto start with the system but I\u0026rsquo;d prefer to run it manually with one-click shortcut button.\n","permalink":"https://techshinobi.org/posts/kalianon/","summary":"Kali Linux \u0026amp; FreshTomato Parrot OS was on my old ThinkPad for many years. I recently upgraded it and had some issue with my multi-bootloader. Although it\u0026rsquo;s not Parrot OS\u0026rsquo;s fault, I switched to Kali Linux as a workaround.\nI\u0026rsquo;ve been using this pentesting system since early BackTrack era but never felt it ought to be installed on a hard drive.\nThe graphic installer is much simpler than Parrot OS that may not be an issue for most people.","title":"Kali and Anonsurf"},{"content":"Back to the Command-line For some reason, MS Edge for Linux does not have the Read Aloud feature which is the only reason I would like to use Edge. The TTS engine made by Microsoft sounds incomparable to those poorly made chrome extensions.\nTherefore, I found a work around with edge-tts. This is a CLI tool uses Edge TTS service. The instruction on its Github repo is very good.\nAfter installation, use edge-tts --list-voices | grep US to show English speaking characters and now I can locate a text file in the terminal to be read.\nedge-playback --voice en-US-AriaNeural --file \u0026#34;tts.txt\u0026#34; This command would read aloud the entire text file with subtitles output in the terminal, very cool.\nedge-tts --voice en-US-AriaNeural --file \u0026#34;tts.txt\u0026#34; --write-media \u0026#34;tts.mp3\u0026#34; This command would generate a mp3 file from the text file.\nI tried to make offline audiobook by this and found out it would run into a connection issue if the text is too long. This might be an API protection mechanism against abuse.\nThus, when I need to make a long book, I have to separate it into pieces and consolidate them by using ffmpeg.\nffmpeg -i \u0026#34;concat:part1.mp3|part2.mp3\u0026#34; -c copy output.mp3 or\n(for %i in (*.mp3) do @echo file \u0026#39;%i\u0026#39;) \u0026gt; mylist.txt ffmpeg -f concat -i mylist.txt -c copy output.mp3 Either would work depending how many files I want to merge.\nI have tried different GUI tools and none of those works reliably. This is by far the most reliable yet easy way if you\u0026rsquo;re comfortable with the command-line.\nGrapheneOS Because GrapheneOS doesn\u0026rsquo;t provide any TTS engine by default. I use Feeder regularly for RSS and sometimes I want to listen instead of read. This tool brings Edge TTS into Android which is very cool.\nIt compromises some privacy by using TTS engines. That\u0026rsquo;s why it\u0026rsquo;s not something out-of-the-box for a hardened Android build. This is a trade-off and I\u0026rsquo;d rather use Edge TTS than Google\u0026rsquo;s.\n","permalink":"https://techshinobi.org/posts/edgetts/","summary":"Back to the Command-line For some reason, MS Edge for Linux does not have the Read Aloud feature which is the only reason I would like to use Edge. The TTS engine made by Microsoft sounds incomparable to those poorly made chrome extensions.\nTherefore, I found a work around with edge-tts. This is a CLI tool uses Edge TTS service. The instruction on its Github repo is very good.\nAfter installation, use edge-tts --list-voices | grep US to show English speaking characters and now I can locate a text file in the terminal to be read.","title":"Edge TTS Reader"},{"content":"Acceleration During my teenage years, I was really into FPS and RTS games. That\u0026rsquo;s why I\u0026rsquo;m kind of picky on computer mouses and being paranoid of acceleration in the OS.\nPermanently disabling acceleration for Windows is simple. Besides unchecking the \u0026ldquo;Enhance pointer precision\u0026rdquo; in the main.cpl, some registry hacks such as the good old classic \u0026ldquo;CPL Mouse Fix\u0026rdquo; or the later \u0026ldquo;MarkC\u0026rdquo; would do it easily by a REG/batch file. It is also possible doing manually if you want.\nHowever, this is much harder for Linux.\nI can\u0026rsquo;t express more that how much I rely on ArchWiki when tweaking any Linux-based system. By following the wiki page, I can temporarily accomplish the result but failed autostarting 50-mouse-acceleration.conf to preserve the result after rebooting.\njagardaniel is my savior by sharing this script on reddit. My only change is the device name (find it by xinput --list) and Accel Speed:\n#!/bin/sh device=\u0026#34;my mouse\u0026#34; if xinput list --id-only \u0026#34;${device}\u0026#34; \u0026gt; /dev/null 2\u0026gt;\u0026amp;1; then xinput --set-prop \u0026#34;${device}\u0026#34; \u0026#39;libinput Accel Profile Enabled\u0026#39; 0, 1 xinput --set-prop \u0026#34;${device}\u0026#34; \u0026#39;libinput Accel Speed\u0026#39; 0 notify-send \u0026#34;Mouse settings applied\u0026#34; else echo \u0026#34;Unable to find device ${device}\u0026#34; \u0026gt;\u0026amp;2 exit 1 fi After saving it, run chmod +x script.sh from terminal to ensure its permission and add it into Startup Applications Preferences. This works perfectly.\nTrackball This method of autostarting script also works with my Kensington trackball thanks for ArtiomSu creating this fantastic script. It enables natural scrolling and disables acceleration. The only change I made is the key mapping:\nmouse_name=\u0026#34;Kensington Expert Wireless TB Mouse\u0026#34; check=$(xinput | grep \u0026#34;$mouse_name\u0026#34;) if [[ ! -z \u0026#34;$check\u0026#34; ]]; then mouse_id=$(xinput | grep \u0026#34;$mouse_name\u0026#34; | sed \u0026#39;s/^.*id=\\([0-9]*\\)[ \\t].*$/\\1/\u0026#39;) # swap right and back button then swap middle and back button xinput set-button-map $mouse_id 1 8 3 4 5 6 7 2 9 # enable better scrolling xinput set-prop $mouse_id \u0026#34;libinput Natural Scrolling Enabled\u0026#34; 1 # disable acceliration for the ball xinput set-prop $mouse_id \u0026#34;libinput Accel Profile Enabled\u0026#34; 0, 1 # allow scrolling by holding middle mouse button and using the ball to scroll ( really smooth and fast ). xinput set-prop $mouse_id \u0026#34;libinput Scroll Method Enabled\u0026#34; 0, 0, 1 # allow the remmaped middle mouse to be used for middle mouse scroll xinput set-prop $mouse_id \u0026#34;libinput Button Scrolling Button\u0026#34; 8 fi The original layout:\n______________ _________ ________________ | back | | | | right click | -------------- | | ---------------- ______________ | | ________________ | left click | | | | middle click | -------------- --------- ---------------- My layout:\n______________ _________ ________________ | back | | | | middle click | -------------- | | ---------------- ______________ | | ________________ | left click | | | | right click | -------------- --------- ---------------- Gesture I\u0026rsquo;d like to use gestures whenever there are tabs within a program, mainly browsers, file manager and terminal. Therefore, one universal gesture tool that runs at desktop/system level is necessary. For Windows, there are many choices and I use StrokesPlus.\nHowever, for Linux, it\u0026rsquo;s so hard to find any alternative.\nI\u0026rsquo;ve tried easystroke which is no longer maintained for many years. It works very well and has all the functions I needed. Unfortunately, there is one problem ruined everything. It crashes randomly and kills the Xorg/X11 server. That results rebooting of the desktop environment and send me back to the log-in window while force quitting all running processes.\nThis can be disastrous while working and it happens so randomly that is very difficult to troubleshoot with.\nI had to fall back to browser extensions and set them up one by one. There are two open source options, Gesturefy for Firefox-based, smartUp for Chromium-based and no love for Webkit. They are great compare to other extensions and by design there is NO extensions that work with loading page and internal pages. So I have to keep pressing Ctrl+Tab and Ctrl+Shift+Tab when I have to.\nMaybe I can find/create something better in the future.\nTrackPoint There are also problems with Windows undoubtedly. The TrackPoint on my old ThinkPad is a big one, especially with newer versions of Windows 10. Although I can make it work perfectly by sneak the outdated Synaptics and UltraNav into the newer OS, the process is tedious and painful.\nI also use portable USB keyboards with TrackPoint so a light and portable solution is needed. My requirement is simple, just to make the TrackPoint behave like under most Linux desktop:\n Move to scroll while holding down the middle button Perform middle click as a mouse wheel  An AutoHotkey script works great and easy to set up.\nFirst, install the latest AHK 1.x from its release page\nThen, download the script and simply run it to try and tweak. Or copy paste the script code into notepad and save as TP_middle_Scroll.ahk\n; Midbutton down for scrolling {{{ ; Feature: with acceleration as intended. ; Source: http://forum.notebookreview.com/threads/ultranav-middle-click-button-scroll.423415/ ; Linking source: https://superuser.com/questions/91074/thinkpad-trackpoint-scrolling-and-middle-click-possible ; Working version {{{ $*MButton:: Hotkey, $*MButton Up, MButtonup, off KeyWait, MButton, T0.2 If ErrorLevel = 1 { Hotkey, $*MButton Up, MButtonup, on MouseGetPos, ox, oy SetTimer, WatchTheMouse, 5 SystemCursor(\u0026#34;Toggle\u0026#34;) } Else Send {MButton} return MButtonup: Hotkey, $*MButton Up, MButtonup, off SetTimer, WatchTheMouse, off SystemCursor(\u0026#34;Toggle\u0026#34;) return WatchTheMouse: MouseGetPos, nx, ny dy := ny-oy dx := nx-ox If (dx**2 \u0026gt; 0 and dx**2\u0026gt;dy**2) ;edit 4 for sensitivity (changes sensitivity to movement) { times := Abs(dy)/1 ;edit 1 for sensitivity (changes frequency of scroll signal) Loop, %times% { If (dx \u0026gt; 0) Click WheelRight Else Click WheelLeft } } If (dy**2 \u0026gt; 0 and dy**2\u0026gt;dx**2) ;edit 0 for sensitivity (changes sensitivity to movement) { times := Abs(dy)/1 ;edit 1 for sensitivity (changes frequency of scroll signal) Loop, %times% { If (dy \u0026gt; 0) Click WheelDown Else Click WheelUp } } MouseMove ox, oy return SystemCursor(OnOff=1) ; INIT = \u0026#34;I\u0026#34;,\u0026#34;Init\u0026#34;; OFF = 0,\u0026#34;Off\u0026#34;; TOGGLE = -1,\u0026#34;T\u0026#34;,\u0026#34;Toggle\u0026#34;; ON = others { static AndMask, XorMask, $, h_cursor ,c0,c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,c11,c12,c13 ; system cursors , b1,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12,b13 ; blank cursors , h1,h2,h3,h4,h5,h6,h7,h8,h9,h10,h11,h12,h13 ; handles of default cursors if (OnOff = \u0026#34;Init\u0026#34; or OnOff = \u0026#34;I\u0026#34; or $ = \u0026#34;\u0026#34;) ; init when requested or at first call { $ = h ; active default cursors VarSetCapacity( h_cursor,4444, 1 ) VarSetCapacity( AndMask, 32*4, 0xFF ) VarSetCapacity( XorMask, 32*4, 0 ) system_cursors = 32512,32513,32514,32515,32516,32642,32643,32644,32645,32646,32648,32649,32650 StringSplit c, system_cursors, `, Loop %c0% { h_cursor := DllCall( \u0026#34;LoadCursor\u0026#34;, \u0026#34;uint\u0026#34;,0, \u0026#34;uint\u0026#34;,c%A_Index% ) h%A_Index% := DllCall( \u0026#34;CopyImage\u0026#34;, \u0026#34;uint\u0026#34;,h_cursor, \u0026#34;uint\u0026#34;,2, \u0026#34;int\u0026#34;,0, \u0026#34;int\u0026#34;,0, \u0026#34;uint\u0026#34;,0 ) b%A_Index% := DllCall(\u0026#34;CreateCursor\u0026#34;,\u0026#34;uint\u0026#34;,0, \u0026#34;int\u0026#34;,0, \u0026#34;int\u0026#34;,0 , \u0026#34;int\u0026#34;,32, \u0026#34;int\u0026#34;,32, \u0026#34;uint\u0026#34;,\u0026amp;AndMask, \u0026#34;uint\u0026#34;,\u0026amp;XorMask ) } } if (OnOff = 0 or OnOff = \u0026#34;Off\u0026#34; or $ = \u0026#34;h\u0026#34; and (OnOff \u0026lt; 0 or OnOff = \u0026#34;Toggle\u0026#34; or OnOff = \u0026#34;T\u0026#34;)) $ = b ; use blank cursors else $ = h ; use the saved cursors Loop %c0% { h_cursor := DllCall( \u0026#34;CopyImage\u0026#34;, \u0026#34;uint\u0026#34;,%$%%A_Index%, \u0026#34;uint\u0026#34;,2, \u0026#34;int\u0026#34;,0, \u0026#34;int\u0026#34;,0, \u0026#34;uint\u0026#34;,0 ) DllCall( \u0026#34;SetSystemCursor\u0026#34;, \u0026#34;uint\u0026#34;,h_cursor, \u0026#34;uint\u0026#34;,c%A_Index% ) } } ; }}} ; }}} To make the script auto start with the system, create a shortcut link under C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\ by drag and drop while hoding ALT key. Or Right Click - New - Shortcut - Browse or Type /path/to/TP_middle_Scroll.ahk , then reboot the system to confirm the result.\n","permalink":"https://techshinobi.org/posts/tweakingmouse/","summary":"Acceleration During my teenage years, I was really into FPS and RTS games. That\u0026rsquo;s why I\u0026rsquo;m kind of picky on computer mouses and being paranoid of acceleration in the OS.\nPermanently disabling acceleration for Windows is simple. Besides unchecking the \u0026ldquo;Enhance pointer precision\u0026rdquo; in the main.cpl, some registry hacks such as the good old classic \u0026ldquo;CPL Mouse Fix\u0026rdquo; or the later \u0026ldquo;MarkC\u0026rdquo; would do it easily by a REG/batch file. It is also possible doing manually if you want.","title":"Tweaking the Mouse"},{"content":"This is my 2nd time using HUGO and hosting a site on Github Pages. It\u0026rsquo;s so convenient compare to self hosting. I don\u0026rsquo;t have to set up DDNS or CDN, also not have to patch up or update everything periodically to keep it secure.\nAll the steps I have done are very similar to this article, except making the Personal Access Token and Custom Domain (these are easy to find separately).\nThe theme I picked up is PaperMod. It is well designed that provides simplicity without sacrificing functionality. However, the Archive and Search feature are not functional by default. Enabling everything I need was quite easy with the wiki manual and the example site as reference.\nPersonalizing the template in the code file is much easier than the WordPress admin dashboard. To respect visitor\u0026rsquo;s privacy and not ruin the user experience with those nasty pop-ups, I disabled all analytics support by putting env: development in the config file.\nI also applied another block of code to ensure all those invaders are suppressed.\nprivacy: disqus: disable: true googleAnalytics: disable: true instagram: disable: true twitter: disable: true vimeo: disable: true youtube: disable: false privacyEnhanced: true The only exception is youtube, since it provides privacy Enhanced feature. What it does is turning the youtube URL into www.youtube-nocookie.com so that makes Google harder to track people inside my website.\nYes, just make a bit it harder. That\u0026rsquo;s why I also provided invidious links as alternative to the youtube video for those who cares about online privacy.\nIn my site, we have no ugly GDPR cookie concent popups because there is no cookie or any sort of tracking at all.\nOne more little thing, the image of the favicon as well as my github profile avatar, that is from a very interesting Japanese swordmanship called \u0026ldquo;Tenshinryu\u0026rdquo;. It is the only traditional school that embraces the Internet and openly share their techniques through video. That\u0026rsquo;s why I practice this school.\n","permalink":"https://techshinobi.org/posts/little-things-behind/","summary":"This is my 2nd time using HUGO and hosting a site on Github Pages. It\u0026rsquo;s so convenient compare to self hosting. I don\u0026rsquo;t have to set up DDNS or CDN, also not have to patch up or update everything periodically to keep it secure.\nAll the steps I have done are very similar to this article, except making the Personal Access Token and Custom Domain (these are easy to find separately).","title":"Little Things Behind This Website"},{"content":"In This Day and Age? Back then, when MySpace and 000webhost was the thing. I wrote blog regularly about my life and hobby. That was the beginning of my Internet journey and tweaking CSS code while posting an article was fun.\nToday, I\u0026rsquo;m supposed to post my stuff on somewhere like mastodon or telegram channel but here I am. Because I feel most comfortable this way.\nDilemma of Giving Back The beginning of my Linux journey was with some early version of OpenWrt and BackTrack, then Puppy and Ubuntu. At this very moment, I\u0026rsquo;m typing with MarkText on a Pop!_OS and all my servers are running on either CentOS or Debian.\nHowever, it was a shame that I have never contribute a single line of code back to the FOSS community at all. I have done a lot of techy nerdy projects in the past but none of those was suitable for the propose.\nOld Motivation New Direction Last month, two talks inspired me deeply.\nThe Homelab Show Episode 50:How To Give Back and Participate In OpenSource Projects     Privacy friendly watch Link:\nhttps://invidious.weblibre.org/watch?v=mxLEwFpsMp8\n  Podcast Link: https://thehomelab.show/2022/03/31/the-homelab-show-ep-50-how-to-give-back-and-participate-in-opensource-projects/\n  Privacy, Surveillance \u0026amp; Decentralization Podcast | The Hated One w/ Closed Ntwrk     Privacy friendly watch Link:\nhttps://invidious.weblibre.org/watch?v=3C2z7pViZ4o\n  Podcast Link:\nhttps://www.closedntwrk.com/episode-12-collab-with-the-hated-one-youtube-personality/\n  Both Tom Lawrence and The Hated One are not specialized in coding but they have their very own way to make their contribution back to the community, by putting good information and knowledge on the Internet to help others.\nI think I can do the same, but by writing instead of talking. There are some project notes lying in my Obsidian vault. I wrote them because I found no one else did. The notes might be helpful for someone so I think they are worth to share.\n","permalink":"https://techshinobi.org/posts/why-i-started/","summary":"In This Day and Age? Back then, when MySpace and 000webhost was the thing. I wrote blog regularly about my life and hobby. That was the beginning of my Internet journey and tweaking CSS code while posting an article was fun.\nToday, I\u0026rsquo;m supposed to post my stuff on somewhere like mastodon or telegram channel but here I am. Because I feel most comfortable this way.\nDilemma of Giving Back The beginning of my Linux journey was with some early version of OpenWrt and BackTrack, then Puppy and Ubuntu.","title":"Why I Started This Blog"}]